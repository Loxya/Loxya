@use './variables' as *;
@use '~@/themes/default/style/globals';
@use 'sass:color';
@use 'sass:map';

.Button {
    $block: &;

    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: $border-width solid;
    border-radius: $border-radius;
    line-height: 1;
    text-decoration: none;
    white-space: nowrap;
    user-select: none;
    cursor: pointer;
    transition-duration: 300ms;
    transition-property: border-color, background-color, color;
    gap: $internal-spacing;

    &:hover,
    &:focus {
        outline: 0;
    }

    &::before,
    &__icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 1.1em;
        height: 1.1em;
        font-size: 1.05em;
        line-height: 1.15;
        text-align: center;
        vertical-align: -0.05rem;
    }

    //
    // - Modifiers
    //

    &--collapsible {
        &#{$block}--with-icon {
            #{$block}__content {
                display: none;
            }
        }
    }

    //
    // - Ã‰tat
    //

    &--disabled {
        cursor: not-allowed;
        opacity: 0.5;
    }

    &--loading {
        cursor: wait;
        opacity: 0.75;
    }

    //
    // - Tailles
    //

    // stylelint-disable-next-line scss/dollar-variable-first-in-block, order/order
    $sizes: (
        default: $default-size,
        small: $small-size,
        large: $large-size,
        full-width: $full-width-size,
    );

    @each $name, $size in $sizes {
        $--modifier: if($name == 'default', null, --#{$name});

        &#{$--modifier} {
            min-height: map.get($size, min-height);
            padding: map.get($size, padding);
            font-size: map.get($size, font-size);
        }
    }

    &--full-width {
        width: 100%;
    }

    //
    // - Variantes
    //

    // stylelint-disable-next-line scss/dollar-variable-first-in-block, order/order
    $variants: (
        default: $default-variant,
        primary: $primary-variant,
        secondary: $secondary-variant,
        transparent: $transparent-variant,
        success: $success-variant,
        warning: $warning-variant,
        danger: $danger-variant,
    );

    @each $name, $variant in $variants {
        $--modifier: if($name == 'default', null, --#{$name});

        &#{$--modifier} {
            border-color: map.get($variant, border-color);
            background: map.get($variant, background);
            color: map.get($variant, color);

            &:hover {
                border-color: map.get($variant, focused-border-color);
                background-color: map.get($variant, focused-background);
                color: map.get($variant, focused-color);
            }

            &:active {
                border-color: map.get($variant, active-border-color);
                background-color: map.get($variant, active-background);
                color: map.get($variant, active-color);
            }

            &#{$block}--disabled,
            &#{$block}--loading {
                &,
                &:hover,
                &:focus,
                &:active {
                    border-color: map.get($variant, border-color);
                    background-color: map.get($variant, background);
                    color: map.get($variant, color);
                }
            }
        }
    }

    //
    // - Responsive
    //

    @media (min-width: globals.$screen-tablet) {
        &--collapsible {
            &#{$block}--with-icon {
                #{$block}__content {
                    display: block;
                }
            }
        }
    }
}
